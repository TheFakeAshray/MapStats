{"version":3,"sources":["components/app/App.jsx","serviceWorker.js","index.js"],"names":["App","zip","JSZip","useState","zipFile","setZipFile","stats","setStats","timelineObjects","setTimelineObjects","startDate","endDate","dateRange","setDateRange","isInitialMount","useRef","useEffect","current","readFile","findDistance","onChangeHandler","event","target","files","length","loadAsync","remove","tempFiles","Promise","all","Object","keys","map","filename","async","fileData","reader","FileReader","onload","e","push","JSON","parse","result","split","takeout","location","semantic","year","readAsText","File","reduce","acc","curr","activitySegment","distance","duration","activityType","timeSpent","endTimestampMs","startTimestampMs","walking","timeSpentWalking","cycling","timeSpentCycling","train","timeSpentTrain","bus","timeSpentBus","car","timeSpentCar","flying","timeSpentFlying","other","timeSpentOther","total","timeTotal","millisecondsToHours","ms","Math","round","className","method","action","id","type","multiple","onChange","onClick","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":";wiNAGA,IA0PeA,EA1PH,WACX,IAAIC,EAAM,IAAIC,IACd,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAkCN,mBAAS,CAAEO,UAAW,KAAMC,QAAS,OAAvE,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,kBAAO,GAE9BC,qBAAU,YACRF,EAAeG,SAAWC,MACzB,CAACd,EAASQ,IAEbI,qBAAU,YACRF,EAAeG,SAAWE,MACzB,CAACX,IAEJQ,qBAAU,WACLF,EAAeG,UAASH,EAAeG,SAAU,MAGtD,IAAMG,EAAe,uCAAG,WAAMC,GAAN,0EACW,IAA9BA,EAAMC,OAAOC,MAAMC,OADA,iEAGDvB,EAAIwB,UAAUJ,EAAMC,OAAOC,MAAM,IAHhC,QAGjBnB,EAHiB,QAKfsB,OAAO,kDACftB,EAAQsB,OAAO,gCAEfrB,EAAWD,GARY,2CAAH,sDAWfc,EAAQ,uCAAG,+FACRR,EAAuBE,EAAvBF,UAAWC,EAAYC,EAAZD,QACfgB,EAAY,GAFA,SAGVC,QAAQC,IACbC,OAAOC,KAAK3B,EAAQmB,OAAOS,IAA3B,iBAAAF,OAAA,IAAAA,CAAA,UAA+B,WAAMG,GAAN,qGACP7B,EAAQmB,MAAMU,GAAUC,MAAM,QADvB,OACxBC,EADwB,QAExBC,EAAS,IAAIC,YAEZC,OAAS,SAAAC,GAAC,OAAIZ,EAAUa,KAAV,MAAAb,EAAS,YAASc,KAAKC,MAAMH,EAAEjB,OAAOqB,QAAQnC,mBAJrC,EAMcyB,EAASW,MAAM,KAN7B,mBAMvBC,EANuB,KAMdC,EANc,KAMJC,EANI,KAMMC,EANN,KAQjB,YAAZH,GACa,qBAAbC,GACa,8BAAbC,KACGrC,IAAcC,GACfD,IAAcC,GAAWqC,GAAQtC,IAChCA,GAAaC,GAAWqC,GAAQrC,GACjCD,GAAaC,GAAWqC,GAAQtC,GAAasC,GAAQrC,IAEvDyB,EAAOa,WAAW,IAAIC,KAAK,CAACf,GAAWF,IAhBV,2CAA/B,wDAJe,OAwBhBxB,EAAmBkB,GAxBH,2CAAH,qDA2BRR,EAAe,WACpBZ,EACCC,EAAgB2C,QACf,SAACC,EAAKC,GACL,IAAQC,EAAoBD,EAApBC,gBACR,GAAIA,GAAmBA,EAAgBC,SAAU,CAChD,IAAQA,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,SAAUC,EAAiBH,EAAjBG,aACtBC,EAAYF,EAASG,eAAiBH,EAASI,iBAErD,OAAQH,GACP,IAAK,UACJL,EAAIS,SAAWN,EACfH,EAAIU,kBAAoBJ,EAChB,MACF,IAAK,UACHN,EAAIW,SAAWR,EACfH,EAAIY,kBAAoBN,EACxB,MACT,IAAK,WACL,IAAK,YACL,IAAK,UACJN,EAAIa,OAASV,EACbH,EAAIc,gBAAkBR,EACtB,MACD,IAAK,SACJN,EAAIe,KAAOZ,EACXH,EAAIgB,cAAgBV,EACpB,MACD,IAAK,uBACJN,EAAIiB,KAAOd,EACXH,EAAIkB,cAAgBZ,EACpB,MACD,IAAK,SACJN,EAAImB,QAAUhB,EACdH,EAAIoB,iBAAmBd,EACvB,MACD,QACCN,EAAIqB,OAASlB,EACbH,EAAIsB,gBAAkBhB,EAGxBN,EAAIuB,OAASpB,EACbH,EAAIwB,WAAalB,EAElB,OAAON,IAER,CACCuB,MAAO,EACFd,QAAS,EACTE,QAAS,EACdE,MAAO,EACPE,IAAK,EACLE,IAAK,EACLE,OAAQ,EACRE,MAAO,EACPG,UAAW,EACNd,iBAAkB,EAClBE,iBAAkB,EACvBU,eAAgB,EAChBR,eAAgB,EAChBE,aAAc,EACdE,aAAc,EACdE,gBAAiB,MAMfK,EAAsB,SAAAC,GAAE,OAAIC,KAAKC,MAAOF,EAAK,IAAO,GAAK,GAAM,KAAO,KAEzEjB,EAgBCvD,EAhBDuD,QACAE,EAeCzD,EAfDyD,QACFE,EAcG3D,EAdH2D,MACAE,EAaG7D,EAbH6D,IACAE,EAYG/D,EAZH+D,IACAE,EAWGjE,EAXHiE,OACAE,EAUGnE,EAVHmE,MACAE,EASGrE,EATHqE,MACAb,EAQGxD,EARHwD,iBACAE,EAOG1D,EAPH0D,iBACAU,EAMGpE,EANHoE,eACAR,EAKG5D,EALH4D,eACAE,EAIG9D,EAJH8D,aACAE,EAGGhE,EAHHgE,aACAE,EAEGlE,EAFHkE,gBACAI,EACGtE,EADHsE,UAGOlE,EAAuBE,EAAvBF,UAAWC,EAAYC,EAAZD,QAEnB,OACC,yBAAKsE,UAAU,OACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,8BACd,yBAAKA,UAAU,aACd,0BAAMC,OAAO,OAAOC,OAAO,IAAIC,GAAG,KACjC,yBAAKH,UAAU,oBACd,oDACA,2BAAOI,KAAK,OAAOJ,UAAU,eAAeK,SAAS,GAAGC,SAAUnE,QAKtE,yBAAK6D,UAAU,8BACd,4BAAQO,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,OACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,QACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,QACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,QACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,QACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,QACA,4BAAQ6E,QAAS,kBAAM3E,EAAa,CAAEH,UAAW,KAAMC,QAAS,SAAhE,SAED,yBAAKsE,UAAU,8BACbvE,GAAaC,GAAb,sBAAuCC,EAAUF,UAAjD,eAAiEE,EAAUD,UAE7E,yBAAKsE,UAAU,8BACbzE,EAAgBgB,OAAS,GACzB,yBAAKyD,UAAU,OACd,4BACC,4BACC,qDACCpB,EAAU,IAFZ,OAIQ,4BACP,qDACCE,EAAU,IAFJ,OAIR,4BACC,uDACCE,EAAQ,IAFV,OAIA,4BACC,qDACCE,EAAM,IAFR,OAIA,4BACC,qDACCE,EAAM,IAFR,OAIA,4BACC,qDACCE,EAAS,IAFX,OAIA,4BACC,oDACCE,EAAQ,IAFV,OAIA,4BACC,oDACCE,EAAQ,IAFV,OAIA,4BACC,wDACCE,EAAoBf,GAFtB,UAIA,4BACC,wDACCe,EAAoBb,GAFtB,UAIA,4BACC,yDACCa,EAAoBX,GAFtB,UAIA,4BACC,uDACCW,EAAoBT,GAFtB,UAIA,4BACC,uDACCS,EAAoBP,GAFtB,UAIA,4BACC,uDACCO,EAAoBL,GAFtB,UAIA,4BACC,yDACCK,EAAoBH,GAFtB,UAIA,4BACC,sDACCG,EAAoBD,GAFtB,gBCpOYa,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.27980320.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport JSZip from 'jszip';\n\nconst App = () => {\n\tlet zip = new JSZip();\n\tconst [zipFile, setZipFile] = useState();\n\tconst [stats, setStats] = useState([]);\n\tconst [timelineObjects, setTimelineObjects] = useState([]);\n\tconst [dateRange, setDateRange] = useState({ startDate: null, endDate: null });\n\tconst isInitialMount = useRef(true);\n\n\tuseEffect(() => {\n\t\t!isInitialMount.current && readFile();\n\t}, [zipFile, dateRange]);\n\n\tuseEffect(() => {\n\t\t!isInitialMount.current && findDistance();\n\t}, [timelineObjects]);\n\n\tuseEffect(() => {\n\t\tif (isInitialMount.current) isInitialMount.current = false;\n\t});\n\n\tconst onChangeHandler = async event => {\n\t\tif (event.target.files.length === 0) return;\n\n\t\tconst zipFile = await zip.loadAsync(event.target.files[0]);\n\n\t\tzipFile.remove('Takeout/Location History/Location History.json');\n\t\tzipFile.remove('Takeout/archive_browser.html');\n\n\t\tsetZipFile(zipFile);\n\t};\n\n\tconst readFile = async () => {\n\t\tconst { startDate, endDate } = dateRange;\n\t\tlet tempFiles = [];\n\t\tawait Promise.all(\n\t\t\tObject.keys(zipFile.files).map(async filename => {\n\t\t\t\tconst fileData = await zipFile.files[filename].async('blob');\n\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\treader.onload = e => tempFiles.push(...JSON.parse(e.target.result).timelineObjects);\n\n\t\t\t\tconst [takeout, location, semantic, year] = filename.split('/');\n\t\t\t\tif (\n\t\t\t\t\ttakeout === 'Takeout' &&\n\t\t\t\t\tlocation === 'Location History' &&\n\t\t\t\t\tsemantic === 'Semantic Location History' &&\n\t\t\t\t\t((!startDate && !endDate) ||\n\t\t\t\t\t\t(startDate && !endDate && year >= startDate) ||\n\t\t\t\t\t\t(!startDate && endDate && year <= endDate) ||\n\t\t\t\t\t\t(startDate && endDate && year >= startDate && year <= endDate))\n\t\t\t\t)\n\t\t\t\t\treader.readAsText(new File([fileData], filename));\n\t\t\t})\n\t\t);\n\n\t\tsetTimelineObjects(tempFiles);\n\t};\n\n\tconst findDistance = () => {\n\t\tsetStats(\n\t\t\ttimelineObjects.reduce(\n\t\t\t\t(acc, curr) => {\n\t\t\t\t\tconst { activitySegment } = curr;\n\t\t\t\t\tif (activitySegment && activitySegment.distance) {\n\t\t\t\t\t\tconst { distance, duration, activityType } = activitySegment;\n\t\t\t\t\t\tconst timeSpent = duration.endTimestampMs - duration.startTimestampMs;\n\n\t\t\t\t\t\tswitch (activityType) {\n\t\t\t\t\t\t\tcase 'WALKING':\n\t\t\t\t\t\t\t\tacc.walking += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentWalking += timeSpent;\n                break;\n              case 'CYCLING':\n                acc.cycling += distance;\n                acc.timeSpentCycling += timeSpent;\n                break\n\t\t\t\t\t\t\tcase 'IN_TRAIN':\n\t\t\t\t\t\t\tcase 'IN_SUBWAY':\n\t\t\t\t\t\t\tcase 'IN_TRAM':\n\t\t\t\t\t\t\t\tacc.train += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentTrain += timeSpent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'IN_BUS':\n\t\t\t\t\t\t\t\tacc.bus += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentBus += timeSpent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'IN_PASSENGER_VEHICLE':\n\t\t\t\t\t\t\t\tacc.car += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentCar += timeSpent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'FLYING':\n\t\t\t\t\t\t\t\tacc.flying += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentFlying += timeSpent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tacc.other += distance;\n\t\t\t\t\t\t\t\tacc.timeSpentOther += timeSpent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tacc.total += distance;\n\t\t\t\t\t\tacc.timeTotal += timeSpent;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttotal: 0,\n          walking: 0,\n          cycling: 0,\n\t\t\t\t\ttrain: 0,\n\t\t\t\t\tbus: 0,\n\t\t\t\t\tcar: 0,\n\t\t\t\t\tflying: 0,\n\t\t\t\t\tother: 0,\n\t\t\t\t\ttimeTotal: 0,\n          timeSpentWalking: 0,\n          timeSpentCycling: 0,\n\t\t\t\t\ttimeSpentOther: 0,\n\t\t\t\t\ttimeSpentTrain: 0,\n\t\t\t\t\ttimeSpentBus: 0,\n\t\t\t\t\ttimeSpentCar: 0,\n\t\t\t\t\ttimeSpentFlying: 0\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t};\n\n\tconst millisecondsToHours = ms => Math.round((ms / 1000 / 60 / 60) * 100) / 100;\n\tconst {\n    walking,\n    cycling,\n\t\ttrain,\n\t\tbus,\n\t\tcar,\n\t\tflying,\n\t\tother,\n\t\ttotal,\n\t\ttimeSpentWalking,\n\t\ttimeSpentCycling,\n\t\ttimeSpentOther,\n\t\ttimeSpentTrain,\n\t\ttimeSpentBus,\n\t\ttimeSpentCar,\n\t\ttimeSpentFlying,\n\t\ttimeTotal\n\t} = stats;\n\n\tconst { startDate, endDate } = dateRange;\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t<div className='col-md-10'>\n\t\t\t\t\t\t<form method='post' action='#' id='#'>\n\t\t\t\t\t\t\t<div className='form-group files'>\n\t\t\t\t\t\t\t\t<label>Upload Your File </label>\n\t\t\t\t\t\t\t\t<input type='file' className='form-control' multiple='' onChange={onChangeHandler} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: null, endDate: null })}>All</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2017, endDate: 2017 })}>2017</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2018, endDate: 2018 })}>2018</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2019, endDate: 2019 })}>2019</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2020, endDate: 2020 })}>2020</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2021, endDate: 2021 })}>2021</button>\n\t\t\t\t\t<button onClick={() => setDateRange({ startDate: 2022, endDate: 2022 })}>2022</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t{startDate && endDate && `Date Range: ${dateRange.startDate} to ${dateRange.endDate}`}\n\t\t\t\t</div>\n\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t{timelineObjects.length > 0 && (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance walked: </strong>\n\t\t\t\t\t\t\t\t\t{walking / 1000} km\n\t\t\t\t\t\t\t\t</li>\n                <li>\n\t\t\t\t\t\t\t\t\t<strong>Distance cycled: </strong>\n\t\t\t\t\t\t\t\t\t{cycling / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance in train: </strong>\n\t\t\t\t\t\t\t\t\t{train / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance in bus: </strong>\n\t\t\t\t\t\t\t\t\t{bus / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance in car: </strong>\n\t\t\t\t\t\t\t\t\t{car / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance in air: </strong>\n\t\t\t\t\t\t\t\t\t{flying / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance other: </strong>\n\t\t\t\t\t\t\t\t\t{other / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Distance total: </strong>\n\t\t\t\t\t\t\t\t\t{total / 1000} km\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent walking: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentWalking)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent cycling: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentCycling)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent in train: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentTrain)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent in bus: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentBus)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent in car: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentCar)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent flying: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentFlying)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent in other: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeSpentOther)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>Time spent total: </strong>\n\t\t\t\t\t\t\t\t\t{millisecondsToHours(timeTotal)} hours\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}